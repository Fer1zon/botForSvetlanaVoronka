from aiogram import types

from aiogram.dispatcher import Dispatcher, FSMContext
from aiogram.dispatcher.filters.state import StatesGroup, State



import sys 
import os 
sys.path.append(os.path.dirname(__file__) + '/..')
from importantFiles.helps import States, dp,bot, cur,conn

from asyncio import sleep




async def responseMailing(message:types.Message, state:FSMContext):
    await state.update_data(text = "", img = "")

    sendText = """
–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤ —á–∞—Ç —Ñ–æ—Ç–æ –∏ —Ç–µ–∫—Å—Ç, –ø–æ—Å–ª–µ –Ω–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Ä–∞—Å—Å—ã–ª–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start_mailing
–¢–µ–∫—Å—Ç –±–µ–∑ —Ñ–æ—Ç–æ –Ω–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–≤—ã—à–∞—Ç—å 4096 —Å–∏–º–≤–æ–ª–æ–≤
–¢–µ–∫—Å—Ç —Å —Ñ–æ—Ç–æ –Ω–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–≤—ã—à–∞—Ç—å 1024 —Å–∏–º–≤–æ–ª–∞"""

    await message.answer(sendText)

    await States.ADMIN_MAILING.set()



async def getImg(message:types.Message, state:FSMContext):
    img = message.photo[-1].file_id
    async with state.proxy() as data:
        text = data["text"]
        data["img"] = img


    sendText = "–ò—Ç–æ–≥–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µüëá"

    if text == "":
        await message.answer(sendText)
        await message.answer_photo(img)

    elif len(text) > 1024:
        await message.answer("–¢–µ–∫—Å—Ç —Å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–µ–π –Ω–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–≤—ã—à–∞—Ç—å 1024 —Å–∏–º–≤–æ–ª–∞")
        await state.update_data(text = "")

    else:
        await message.answer(sendText)
        await message.answer_photo(img, caption=text)


async def getText(message:types.Message, state:FSMContext):
    text = message.text
    async with state.proxy() as data:
        img = data["img"]

    sendText = "–ò—Ç–æ–≥–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µüëá"
    if img != "" and len(text) > 1024: 
        await message.answer("–¢–µ–∫—Å—Ç —Å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–µ–π –Ω–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–≤—ã—à–∞—Ç—å 1024 —Å–∏–º–≤–æ–ª–∞")

    elif len(text) > 4096:
        await message.answer("–¢–µ–∫—Å—Ç –±–µ–∑ —Ñ–æ—Ç–æ –Ω–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–≤—ã—à–∞—Ç—å 4096 —Å–∏–º–≤–æ–ª–æ–≤")
    
    elif img == "":
        await state.update_data(text = text)
        await message.answer(sendText)
        await message.answer(text)

    else:
        await state.update_data(text = text)
        await message.answer(sendText)
        await message.answer_photo(img, caption=text)



async def startMailing(message:types.Message, state:FSMContext):
    async with state.proxy() as data:
        text = data["text"]
        img = data["img"]

    if text == "" and img == "":
        return await message.answer("–í—ã –Ω–µ –∑–∞–¥–∞–ª–∏ –Ω–µ —Ç–µ–∫—Å—Ç–∞, –Ω–µ —Ñ–æ—Ç–æ")
    
    sendText = "–†–∞—Å—Å—ã–ª–∫–∞ –Ω–∞—á–∞—Ç–∞, –±–æ—Ç —Å–æ–æ–±—â–∏—Ç –∫–æ–≥–¥–∞ –æ–Ω–∞ –∑–∞–∫–æ–Ω—á–∏—Ç—å—Å—è"
    await message.answer(sendText)
    await States.ADMIN_MAIN_MENU.set()
    await state.reset_data()

    count = 0

    for dataId in cur.execute("SELECT id FROM users"):


        userId = dataId[0]
        if img != "" and text != "":
            await bot.send_photo(userId, img, caption=text)

        elif img != "" and text == "":
            await bot.send_photo(userId, img)

        elif img == "" and text != "":
            await bot.send_message(userId, text)

        if count == 5:
            count = 0
            await sleep(5)
            continue

    await message.answer("–†–∞—Å—Å—ã–ª–∫–∞ –æ–∫–æ–Ω—á–µ–Ω–∞!")


        




        
        














